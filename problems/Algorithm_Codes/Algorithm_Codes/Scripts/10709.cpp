#include <bits/stdc++.h>
using namespace std;

int h, w;
char c;
int m[104][104];

string s;

int main() {

	cin >> h >> w;

	//-------------------------My Solution ---------------------------------------------------------------------------------------------------------------------
	//1차원 배열인 경우 fill(m,m+10,-1)같이 배열이름+숫자로 초기화 가능하나, 2차원 배열은 해당 인덱스의 주소를 반환하는 형식으로 해야 한다!
	//fill 사용시 유의할 점 -> h,w크기만큼 초기화하지 말고, 반드시 전체를 초기화시켜야 함!! -> h*w크기의 직사각형 배열로 초기화되지 않기 때문(2차원 배열은 컴퓨터 내에선 1차원배열과 같기 때문에 배열 시작부터 h*w번째 배열까지 초기화됨.)
	fill(&m[0][0], &m[0][0] +(104 * 104), -1); 

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < w; j++) {
			cin >> c;
			if (c == 'c') m[i][j] = 0;
		}
	}

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < w; j++) {
			if (m[i][j] == 0) {
				for (int k = j + 1; k < w; k++) {
					if (m[i][k] != 0) m[i][k] = k - j;
				}
			}
		}
	}

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < w; j++) {
			cout << m[i][j] << " ";
		}
		cout << "\n";
	}
//--------------------------------------------------------------------------------------------------------------------------------------

//--------------------------------------Solution 1 -------------------------------------------------------------------------------------

	for (int i = 0; i < h; i++) {
		cin >> s;
		for (int j = 0; j < w; j++) {
			if (s[j] == '.') m[i][j] = -1;
			else m[i][j] = 0;
		}
	}

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < w; j++) {
			int cnt = 1;
			while(m[i][j + 1] == -1) {
				m[i][j + 1] = cnt++;
				j++;
			}
		}
	}

	for (int i = 0; i < h; i++) {
		for (int j = 0; j < w; j++) cout << m[i][j] << " ";
		cout << "\n";
	}
}